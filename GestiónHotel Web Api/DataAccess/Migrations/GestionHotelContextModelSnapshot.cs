// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionHotel.DataAccess.Migrations
{
    [DbContext(typeof(GestionHotelContext))]
    partial class GestionHotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionHotel.BusinessLogic.Entidades.Cabania", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Habilitada")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCupos")
                        .HasColumnType("int");

                    b.Property<int>("NumeroHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroHabitacion"));

                    b.Property<bool>("PoseeJacuzzi")
                        .HasColumnType("bit");

                    b.Property<string>("TipoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Nombre");

                    b.HasIndex("NumeroHabitacion")
                        .IsUnique();

                    b.HasIndex("TipoNombre");

                    b.ToTable("Cabanias");
                });

            modelBuilder.Entity("GestionHotel.BusinessLogic.Entidades.Configuracion", b =>
                {
                    b.Property<string>("Atributo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LimiteInferior")
                        .HasColumnType("int");

                    b.Property<int>("LimiteSuperior")
                        .HasColumnType("int");

                    b.HasKey("Atributo");

                    b.ToTable("Configuracion");
                });

            modelBuilder.Entity("GestionHotel.BusinessLogic.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CabaniaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tecnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabaniaNombre");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("GestionHotel.BusinessLogic.Entidades.Tipo", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("CostoPorHuesped")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Nombre");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("GestionHotel.BusinessLogic.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GestionHotel.BusinessLogic.Entidades.Cabania", b =>
                {
                    b.HasOne("GestionHotel.BusinessLogic.Entidades.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoNombre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("GestionHotel.BusinessLogic.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("GestionHotel.BusinessLogic.Entidades.Cabania", "CabaniaReparada")
                        .WithMany()
                        .HasForeignKey("CabaniaNombre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CabaniaReparada");
                });
#pragma warning restore 612, 618
        }
    }
}
